#BlueJ class context
comment0.params=game
comment0.target=SolitaireDisplay(Solitaire)
comment0.text=\n\ Creates\ a\ display\ for\ Solitaire.\n\ \n\ @param\ \ \ game\ \ \ \ the\ Solitaire\ game\n
comment1.params=g
comment1.target=void\ paintComponent(java.awt.Graphics)
comment1.text=\n\ Creates\ the\ compotents\ of\ the\ game.\n\ \n\ @param\ \ \ g\ \ \ the\ graphics\ of\ the\ game\n
comment10.params=
comment10.target=boolean\ isWasteSelected()
comment10.text=\n\ Determines\ if\ the\ waste\ is\ selected.\n\ \n\ @return\ \ true\ if\ the\ waste\ is\ selected;\ otherwise,\n\ \ \ \ \ \ \ \ \ \ false\n
comment11.params=
comment11.target=void\ selectWaste()
comment11.text=\n\ Selects\ the\ waste.\n
comment12.params=
comment12.target=int\ selectedFoundation()
comment12.text=\n\ Returns\ the\ index\ of\ the\ selected\ foundation.\n\ \n\ @return\ \ the\ index\ of\ the\ selected\ foundation.\n
comment13.params=
comment13.target=boolean\ isFoundationSelected()
comment13.text=\n\ Determines\ if\ a\ foundation\ is\ selected.\n\ \n\ @return\ \ true\ if\ a\ foundation\ is\ selected;\ otherwise,\n\ \ \ \ \ \ \ \ \ \ false\n
comment14.params=index
comment14.target=void\ selectFoundation(int)
comment14.text=\n\ Selects\ a\ foundation\ at\ the\ given\ index.\n\ \n\ @param\ \ \ index\ \ \ the\ index\ of\ the\ foundation\ to\ select\n
comment15.params=
comment15.target=boolean\ isPileSelected()
comment15.text=\n\ Determines\ if\ a\ pile\ is\ selected.\n\ \n\ @return\ \ true\ if\ a\ pile\ is\ selected;\ otherwise,\n\ \ \ \ \ \ \ \ \ \ false\n
comment16.params=
comment16.target=int\ selectedPile()
comment16.text=\n\ Returns\ the\ index\ of\ the\ selected\ pile.\n\ \n\ @return\ \ the\ index\ of\ the\ selected\ pile\n
comment17.params=index
comment17.target=void\ selectPile(int)
comment17.text=\n\ Selects\ a\ pile.\n\ \n\ @param\ \ \ index\ \ \ the\ index\ of\ the\ pile\ to\ select\n
comment2.params=g\ card\ x\ y
comment2.target=void\ drawCard(java.awt.Graphics,\ Card,\ int,\ int)
comment2.text=\n\ Draws\ the\ card.\n\ \n\ @param\ \ \ g\ \ \ \ the\ graphics\ of\ the\ game\n\ @param\ \ \ card\ the\ card\ to\ draw\ \ \ \n\ @param\ \ \ x\ \ \ \ the\ x\ location\ of\ the\ card\ to\ be\ drawn\n\ @param\ \ \ y\ \ \ \ the\ y\ location\ of\ the\ card\ to\ be\ drawn\n\ \n
comment3.params=e
comment3.target=void\ mouseExited(java.awt.event.MouseEvent)
comment3.text=\n\ When\ the\ mouse\ exits.\n\ \n\ @param\ \ \ e\ \ \ the\ MouseEvent\ exit\n
comment4.params=e
comment4.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment4.text=\n\ When\ the\ mouse\ enters.\n\ \n\ @param\ \ \ e\ \ \ the\ MouseEvent\ entrance\n
comment5.params=e
comment5.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment5.text=\n\ When\ the\ mouse\ is\ released.\n\ \n\ @param\ \ \ e\ \ \ the\ MouseEvent\ release\n
comment6.params=e
comment6.target=void\ mousePressed(java.awt.event.MouseEvent)
comment6.text=\n\ When\ the\ mouse\ is\ pressed.\n\ \n\ @param\ \ \ e\ \ \ the\ MouseEvent\ press\n
comment7.params=e
comment7.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment7.text=\n\ When\ the\ mouse\ is\ clicked.\n\ \n\ @param\ \ \ e\ \ \ the\ MouseEvent\ click\n
comment8.params=g\ x\ y
comment8.target=void\ drawBorder(java.awt.Graphics,\ int,\ int)
comment8.text=\n\ Draws\ a\ yellow\ border\ around\ the\ card.\n\ \n\ @param\ \ \ g\ \ \ the\ graphics\ of\ the\ game\n\ @param\ \ \ x\ \ \ the\ x\ location\ of\ the\ card\ to\ draw\ a\ border\n\ @param\ \ \ y\ \ \ the\ y\ location\ of\ the\ card\ to\ draw\ a\ border\n
comment9.params=
comment9.target=void\ unselect()
comment9.text=\n\ Unselects\ an\ element.\n
numComments=18
